name: CI tenant appointment booker

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies
      run: yarn workspace tenant-appointment-booker install
      
    - name: Lint application
      run: yarn workspace tenant-appointment-booker lint

    - name: Build application
      run: yarn workspace tenant-appointment-booker build
    
  build-image:
    name: Build image
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: rg.fr-par.scw.cloud/opera-groupe/opera-groupe-web
          tags: |
            type=sha,prefix={{branch}}-
            type=semver,enable=true,pattern={{version}}          
          flavor: latest=false
      - uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: image build
        uses: int128/kaniko-action@v1
        with:
          push: ${{ github.event_name != 'pull_request' }}
          executor: gcr.io/kaniko-project/executor:latest
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          context: .
          file: ./Dockerfile
          cache: false

  deploy-staging:
    environment: staging
    runs-on: ubuntu-latest
    needs: [ "build", "build-image" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: rg.fr-par.scw.cloud/opera-groupe/opera-groupe-web
          tags: |
            type=sha,prefix={{branch}}-
            type=semver,enable=true,pattern={{version}}.{{patch}}
          flavor: |
            latest=auto
      - name: deploy to cluster
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with: 
          args: |
            helm repo add opera-groupe https://opera-groupe.github.io/opera-groupe-helm/charts
            helm upgrade -i frontend-tenant-appointment-booker opera-groupe/frontend-tenant-appointment-booker --set image.tag=${{ steps.metadata.outputs.version }} --create-namespace --namespace=opera-groupe-staging
